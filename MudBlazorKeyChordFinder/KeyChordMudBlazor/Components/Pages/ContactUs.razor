@inject EmailService EmailService
@inject ISnackbar Snackbar
@inject NavigationManager NavigationManager

@using System.ComponentModel.DataAnnotations

@page "/contact-us"

<MudContainer Class="mt-5" MaxWidth="MaxWidth.Medium">
    <MudText Typo="Typo.h4" Class="mb-4">Contact Us</MudText>
    <MudPaper Class="pa-4" Elevation="4">
	    <EditForm Model="@_model" OnValidSubmit="OnValidSubmit">
		    <DataAnnotationsValidator />
		    <MudTextField T="string" Label="Email" @bind-Value="_model.Email" For="@(() => _model.Email)" Required="true" RequiredError="Email is required!" Validation="@(new EmailAddressAttribute() { ErrorMessage = "The email address is invalid" })" Class="mb-4" />
		    <MudTextField T="string" Label="Subject" @bind-Value="_model.Subject" For="@(() => _model.Subject)" Required="true" RequiredError="Subject is required!" Class="mb-4" />
		    <MudTextField T="string" Label="Message" @bind-Value="_model.Message" For="@(() => _model.Message)" Required="true" RequiredError="Message is required!" Lines="4" Class="mb-4" />
		    <MudButton ButtonType="ButtonType.Submit" Color="Color.Primary" Variant="Variant.Filled" FullWidth>Submit</MudButton>
	    </EditForm>
    </MudPaper>

    <MudOverlay DarkBackground @bind-Visible="_sending">
        <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
    </MudOverlay>
</MudContainer>

@code {
    private ContactFormModel _model = new ContactFormModel();
    private bool _sending;

    class ContactFormModel
    {

        [Required(ErrorMessage = "Email is required!")]
        [EmailAddress(ErrorMessage = "The email address is invalid")]
        public string Email { get; set; }

        [Required(ErrorMessage = "Name is required!")]
        public string Subject { get; set; }

        [Required(ErrorMessage = "Message is required!")]
        public string Message { get; set; }
    }

    private async Task OnValidSubmit()
    {
        _sending = true;
        await EmailService.SendEmailAsync(_model.Email, _model.Subject, _model.Message);
        _sending = false;
        ClearInputFields();

        NavigationManager.NavigateTo("/");
        Snackbar.Add("Your message has been sent successfully!", Severity.Success);
    }

    private void ClearInputFields()
    {
        _model = new ContactFormModel();
    }
}









